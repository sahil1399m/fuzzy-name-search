import streamlit as st

# Corrected function call: "theme.base" returns a string like "light" or "dark"
theme = st.get_option("theme.base")

if theme == "dark":
    st.markdown("""
    <style>
    /* Custom button styling for dark theme */
    .stButton > button {
        background: linear-gradient(45deg, #6a11cb, #2575fc);
        color: white;
        border: none;
        border-radius: 10px;
        padding: 10px 20px;
        font-weight: bold;
        transition: 0.3s;
        cursor: pointer;
    }

    .stButton > button:hover {
        transform: scale(1.05);
        box-shadow: 0 0 10px #2575fc;
    }

    /* Optional: customize slider knob (a common 'CSS hack' selector) */
    /* Target the thumb of the slider, which often receives the internal class for the knob */
    .stSlider .st-bd { /* This targets the internal knob element. The class may change. */
        background-color: #6a11cb !important;
    }
    </style>
    """, unsafe_allow_html=True)

else:
    st.markdown("""
    <style>
    /* Custom button styling for light theme */
    .stButton > button {
        background: linear-gradient(45deg, #0366d6, #005cc5);
        color: white;
        border: none;
        border-radius: 10px;
        padding: 10px 20px;
        font-weight: bold;
        transition: 0.3s;
        cursor: pointer;
    }

    .stButton > button:hover {
        transform: scale(1.05);
        box-shadow: 0 0 10px #0366d6;
    }

    /* Optional: customize slider knob (a common 'CSS hack' selector) */
    .stSlider .st-bd { 
        background-color: #0366d6 !important;
    }
    </style>
    """, unsafe_allow_html=True)

# Example usage of the styled elements (add these to see the styles applied)
st.title("Streamlit UI Demo")
st.button("Styled Button")
st.slider("Styled Slider", 0, 100, 50)
